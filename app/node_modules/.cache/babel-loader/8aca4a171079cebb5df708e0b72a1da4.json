{"remainingRequest":"/Users/thereselidbom/Desktop/FRONTEND/eCommerce2.0/eCommerce/app/node_modules/babel-loader/lib/index.js!/Users/thereselidbom/Desktop/FRONTEND/eCommerce2.0/eCommerce/app/node_modules/eslint-loader/index.js??ref--13-0!/Users/thereselidbom/Desktop/FRONTEND/eCommerce2.0/eCommerce/app/src/store/modules/cart.js","dependencies":[{"path":"/Users/thereselidbom/Desktop/FRONTEND/eCommerce2.0/eCommerce/app/src/store/modules/cart.js","mtime":1617004593659},{"path":"/Users/thereselidbom/Desktop/FRONTEND/eCommerce2.0/eCommerce/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thereselidbom/Desktop/FRONTEND/eCommerce2.0/eCommerce/app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/thereselidbom/Desktop/FRONTEND/eCommerce2.0/eCommerce/app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHsKICAgIGNhcnQ6IFtdCiAgfSwKICBnZXR0ZXJzOiB7CiAgICBzaG9wcGluZ0NhcnQ6IGZ1bmN0aW9uIHNob3BwaW5nQ2FydChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuY2FydDsKICAgIH0sCiAgICBjYXJ0SXRlbUNvdW50OiBmdW5jdGlvbiBjYXJ0SXRlbUNvdW50KHN0YXRlKSB7CiAgICAgIHZhciBpdGVtcyA9IDA7CiAgICAgIHN0YXRlLmNhcnQuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIGl0ZW1zICs9IGl0ZW0ucXVhbnRpdHk7CiAgICAgIH0pOwogICAgICByZXR1cm4gaXRlbXM7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIEFERF9UT19DQVJUOiBmdW5jdGlvbiBBRERfVE9fQ0FSVChzdGF0ZSwgX3JlZikgewogICAgICB2YXIgcHJvZHVjdCA9IF9yZWYucHJvZHVjdCwKICAgICAgICAgIHF1YW50aXR5ID0gX3JlZi5xdWFudGl0eTsKICAgICAgdmFyIGV4aXN0cyA9IHN0YXRlLmNhcnQuZmluZChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLnByb2R1Y3QuaWQgPT09IHByb2R1Y3QuaWQ7CiAgICAgIH0pOwoKICAgICAgaWYgKGV4aXN0cykgewogICAgICAgIGV4aXN0cy5xdWFudGl0eSArPSBxdWFudGl0eTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHN0YXRlLmNhcnQucHVzaCh7CiAgICAgICAgcHJvZHVjdDogcHJvZHVjdCwKICAgICAgICBxdWFudGl0eTogcXVhbnRpdHkKICAgICAgfSk7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBhZGRQcm9kdWN0VG9DYXJ0OiBmdW5jdGlvbiBhZGRQcm9kdWN0VG9DYXJ0KF9yZWYyLCBfcmVmMykgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICB2YXIgcHJvZHVjdCA9IF9yZWYzLnByb2R1Y3QsCiAgICAgICAgICBxdWFudGl0eSA9IF9yZWYzLnF1YW50aXR5OwogICAgICBjb21taXQoJ0FERF9UT19DQVJUJywgewogICAgICAgIHByb2R1Y3Q6IHByb2R1Y3QsCiAgICAgICAgcXVhbnRpdHk6IHF1YW50aXR5CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/thereselidbom/Desktop/FRONTEND/eCommerce2.0/eCommerce/app/src/store/modules/cart.js"],"names":["state","cart","getters","shoppingCart","cartItemCount","items","forEach","item","quantity","mutations","ADD_TO_CART","product","exists","find","id","push","actions","addProductToCart","commit"],"mappings":";;AACA,eAAe;AACbA,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE;AADD,GADM;AAIbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,YAAY,EAAE,sBAAAH,KAAK,EAAI;AACrB,aAAOA,KAAK,CAACC,IAAb;AACD,KAHM;AAIPG,IAAAA,aAAa,EAAE,uBAAAJ,KAAK,EAAI;AACtB,UAAIK,KAAK,GAAG,CAAZ;AACAL,MAAAA,KAAK,CAACC,IAAN,CAAWK,OAAX,CAAmB,UAAAC,IAAI,EAAI;AACzBF,QAAAA,KAAK,IAAIE,IAAI,CAACC,QAAd;AACD,OAFD;AAGA,aAAOH,KAAP;AACD;AAVM,GAJI;AAgBbI,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,EAAE,qBAACV,KAAD,QAAkC;AAAA,UAAxBW,OAAwB,QAAxBA,OAAwB;AAAA,UAAfH,QAAe,QAAfA,QAAe;AAC7C,UAAII,MAAM,GAAGZ,KAAK,CAACC,IAAN,CAAWY,IAAX,CAAgB,UAAAN,IAAI;AAAA,eAAIA,IAAI,CAACI,OAAL,CAAaG,EAAb,KAAoBH,OAAO,CAACG,EAAhC;AAAA,OAApB,CAAb;;AACA,UAAGF,MAAH,EAAW;AACTA,QAAAA,MAAM,CAACJ,QAAP,IAAmBA,QAAnB;AACA;AACD;;AACDR,MAAAA,KAAK,CAACC,IAAN,CAAWc,IAAX,CAAgB;AAACJ,QAAAA,OAAO,EAAPA,OAAD;AAAUH,QAAAA,QAAQ,EAARA;AAAV,OAAhB;AACD;AARQ,GAhBE;AA0BbQ,EAAAA,OAAO,EAAE;AACPC,IAAAA,gBAAgB,EAAE,wCAAqC;AAAA,UAAnCC,MAAmC,SAAnCA,MAAmC;AAAA,UAAxBP,OAAwB,SAAxBA,OAAwB;AAAA,UAAfH,QAAe,SAAfA,QAAe;AACrDU,MAAAA,MAAM,CAAC,aAAD,EAAgB;AAAEP,QAAAA,OAAO,EAAPA,OAAF;AAAWH,QAAAA,QAAQ,EAARA;AAAX,OAAhB,CAAN;AACD;AAHM;AA1BI,CAAf","sourcesContent":["\nexport default {\n  state: {\n    cart: []\n  },\n  getters: {\n    shoppingCart: state => {\n      return state.cart\n    },\n    cartItemCount: state => {\n      let items = 0\n      state.cart.forEach(item => {\n        items += item.quantity\n      })\n      return items\n    }\n  },\n  mutations: {\n    ADD_TO_CART: (state, { product, quantity }) => {\n      let exists = state.cart.find(item => item.product.id === product.id)\n      if(exists) {\n        exists.quantity += quantity\n        return\n      }\n      state.cart.push({product, quantity})\n    }\n  },\n  actions: {\n    addProductToCart: ({commit}, { product, quantity }) => {\n      commit('ADD_TO_CART', { product, quantity })\n    }\n  }\n}"]}]}